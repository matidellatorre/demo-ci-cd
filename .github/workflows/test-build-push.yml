name: Demo CI-CD
on:
    push:
        branches:
            - main
jobs:
    test-and-build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18.x"
            - name: Install dependencies
              run: yarn
            - name: Run tests
              run: yarn test
            - name: Build the project
              run: yarn build

    push-docker-image:
        needs: test-and-build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to DockerHub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Build and push
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/demo-ci-cd:latest
            - name: Notify DockerHub push success
              if: success()
              uses: rtCamp/action-slack-notify@v2
              env:
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
                  SLACK_COLOR: "#36a64f"
                  SLACK_TITLE: "üì¶ Image pushed to DockerHub"
                  SLACK_MESSAGE: |
                      Docker Image pushed to DockerHub successfully.
                      Repo: ${{ github.repository }}
                      Image: ${{ secrets.DOCKERHUB_USERNAME }}/demo-ci-cd:latest

    notify-slack-on-failure:
        if: failure()
        needs: [test-and-build, push-docker-image] #TODO: add deploy-to-ec2
        runs-on: ubuntu-latest
        steps:
            - name: Slack notification on failure
              uses: rtCamp/action-slack-notify@v2
              env:
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
                  SLACK_COLOR: "#FF0000"
                  SLACK_TITLE: "‚ùå Job Failed"
                  SLACK_MESSAGE: |
                      Workflow failed
                      Commit: ${{ github.sha }}
                      Author: ${{ github.actor }}
                      See: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    # deploy-to-ec2:
    #     needs: push-docker-image
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v3
    #         - name: Deploy to EC2
    #           uses: appleboy/ssh-action@v0.1.0
    #           with:
    #               host: ${{ secrets.EC2_HOST }} # Direcci√≥n IP o DNS de tu EC2
    #               username: ubuntu # O el nombre de usuario de tu instancia
    #               key: ${{ secrets.EC2_SSH_KEY }} # La clave privada SSH almacenada en secretos
    #               port: 22 # Puerto SSH
    #               script: |
    #                   # Pull de la imagen de Docker desde Docker Hub
    #                   docker pull ${{ secrets.DOCKERHUB_USERNAME }}/demo-ci-cd:latest
    #                   # Ejecutar el contenedor
    #                   docker run -d -p 80:3000 ${{ secrets.DOCKERHUB_USERNAME }}/demo-ci-cd:latest
    #         - name: Notify EC2 deploy success
    #           if: success()
    #           uses: rtCamp/action-slack-notify@v2
    #           env:
    #               SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
    #               SLACK_COLOR: "#2eb886"
    #               SLACK_TITLE: "üöÄ Deployed to Staging"
    #               SLACK_MESSAGE: |
    #                   Deploy to Staging successfully.
    #                   Repo: ${{ github.repository }}
    #                   Commit: ${{ github.sha }}
